//sum of max subarrax
#include <iostream>
#include <climits>

using namespace std;

int findMaxSubarraySum(int arr[], int size) {
    int maxSum = INT_MIN;  // Initialize maxSum with the minimum possible value

    // Iterate through the array
    int currentSum = 0;
    for (int i = 0; i < size; i++) {
        // Add the current element to the current sum
        currentSum += arr[i];

        // Update maxSum if the current sum is greater
        if (currentSum > maxSum) {
            maxSum = currentSum;
        }

        // If the current sum becomes negative, reset it to 0
        if (currentSum < 0) {
            currentSum = 0;
        }
    }

    return maxSum;
}

int main() {
    int size;
    cout << "Enter the size of the array: ";
    cin >> size;

    int arr[size];
    cout << "Enter the elements of the array:\n";
    for (int i = 0; i < size; i++) {
        cout << "Enter element at index " << i << ": ";
        cin >> arr[i];
    }

    int maxSum = findMaxSubarraySum(arr, size);
    cout << "Maximum sum of a subarray: " << maxSum << endl;

    return 0;
}
