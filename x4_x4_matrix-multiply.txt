//multiplication of matrix
#include <iostream>
using namespace std;

const int MAX_SIZE = 100;

void matrixMultiplication(int mat1[][MAX_SIZE], int mat2[][MAX_SIZE], int res[][MAX_SIZE], int rows1, int cols1, int cols2) {
    for (int i = 0; i < rows1; i++) {
        for (int j = 0; j < cols2; j++) {
            res[i][j] = 0;
            for (int k = 0; k < cols1; k++) {
                res[i][j] += mat1[i][k] * mat2[k][j];
            }
        }
    }
}

void displayMatrix(int matrix[][MAX_SIZE], int rows, int cols) {
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            cout << matrix[i][j] << " ";
        }
        cout << endl;
    }
}

int main() {
    int mat1[MAX_SIZE][MAX_SIZE];
    int mat2[MAX_SIZE][MAX_SIZE];
    int res[MAX_SIZE][MAX_SIZE];

    int rows1, cols1, rows2, cols2;

    cout << "Enter the number of rows for matrix 1: ";
    cin >> rows1;
    cout << "Enter the number of columns for matrix 1: ";
    cin >> cols1;

    cout << "Enter the elements of matrix 1:" << endl;
    for (int i = 0; i < rows1; i++) {
        for (int j = 0; j < cols1; j++) {
            cout << "Enter element at position (" << i << ", " << j << "): ";
            cin >> mat1[i][j];
        }
    }

    cout << "Enter the number of rows for matrix 2: ";
    cin >> rows2;
    cout << "Enter the number of columns for matrix 2: ";
    cin >> cols2;

    if (cols1 != rows2) {
        cout << "Error: The number of columns in matrix 1 must be equal to the number of rows in matrix 2." << endl;
        return 0;
    }

    cout << "Enter the elements of matrix 2:" << endl;
    for (int i = 0; i < rows2; i++) {
        for (int j = 0; j < cols2; j++) {
            cout << "Enter element at position (" << i << ", " << j << "): ";
            cin >> mat2[i][j];
        }
    }

    matrixMultiplication(mat1, mat2, res, rows1, cols1, cols2);

    cout << "Matrix 1:" << endl;
    displayMatrix(mat1, rows1, cols1);

    cout << "Matrix 2:" << endl;
    displayMatrix(mat2, rows2, cols2);

    cout << "Resultant Matrix:" << endl;
    displayMatrix(res, rows1, cols2);

    return 0;
}
